syntax="proto3";

// a test proto file 

import "krpcext.proto";
option java_multiple_files=true;
option java_generic_services=true;

option java_package="com.xxx.userservice.proto";
option java_outer_classname="UserServiceMetas";

message LoginReq {
	string userName = 1;
	string password = 2;
}

message LoginRes {
	int32 retCode = 1;
	string retMsg = 2;
	string userId = 3;
}

message UpdateProfileReq {
	string userId = 1;
	string mobile = 2;
}

message UpdateProfileRes {
	int32 retCode = 1;
	string retMsg = 2;
}

service UserService {
	option (krpc.serviceId) = 100;
	rpc login(LoginReq) returns (LoginRes)  { option (krpc.msgId) = 1; };
	rpc updateProfile(UpdateProfileReq) returns (UpdateProfileRes)   { option (krpc.msgId) = 2; };
}

message ValidateTestReq {
	string userId = 1 [  (krpc.vld).required = true,  (krpc.vld).values = "1,2,3"  ] ;
	string mobile = 2  [  (krpc.vld) = {required : true , range :"22"} ] ;
	int32 i = 3;
}
 message ValidateTestRes {
	int32 retCode = 1;
}

service TestService {
	option (krpc.serviceId) = 101;
	rpc test1(ValidateTestReq) returns (ValidateTestRes)  { option (krpc.msgId) = 1; };
}

message PushReq {
	string clientId = 1;
	string message = 2;
}
message PushRes {
	int32 retCode = 1;
	string retMsg = 2;
}

service PushService {
   option (krpc.serviceId) = 102;
	rpc push(PushReq) returns (PushRes)  { option (krpc.msgId) = 1; };
}

service PushServicev2 {
  option (krpc.serviceId) = 103;
	rpc pushv2(PushReq) returns (PushRes)  { option (krpc.msgId) = 1; };
}

message OrderItemAttr {
	string name = 1;
	string value = 2;
}

message OrderItem {
	string itemId = 1;
	string name = 2;
	int32 price = 3;
	repeated OrderItemAttr attrs = 4;
}

message Order {
	string orderId = 1;
	repeated OrderItem items = 2;
}


message Session {
	string loginFlag = 1;
	string userId = 2;
	string userName = 3;
	string mobile = 4;
}

enum Status {
	NOT_READY = 0;
	READY = 1;
	PAID = 2;
}

message OrderDetail {
	string name = 1;
	int32 quantity = 2;
	double price = 3;
	string note = 4;
}
	
message HttpTestReq {
	string httpMethod = 1;
	string httpSchema = 2;
	string httpPath = 3;
	string httpQueryString = 4;
	string httpContentType = 5;
	string httpContent = 6;

	Session session = 7;
	
	string orderId = 8;
	int32 quantity1 = 9;
	uint32 quantity2 = 10;
	int64 quantity3 = 11;
	uint64 quantity4 = 12;
	float price1 = 13;
	double price2 = 14;
	
	Status status = 15;
	repeated OrderDetail items = 16;

	string userId = 17;
	string userName = 18;
	string mobile = 19;
	
	string sessionId = 20;
	string headerHost = 21;
	string cookieTnk = 22;
	
	repeated string colors = 23;
}
				
message HttpTestRes {
	int32 retCode = 1;
	string retMsg = 2;
	
	string userId = 3;
	Session session = 4;
	
	int32 httpCode = 5;
	string httpContentType = 6;
	
	string headerLocation = 7;
	string headerXmmDddCcc = 8;
	string cookieTnk = 9;	
	
	int32 totalPrice = 10;
}

